const e=Object.prototype.hasOwnProperty;function t(t,n){return Object.getOwnPropertyNames(n).forEach((function(o){if(!e.call(t,o)){var r=Object.getOwnPropertyDescriptor(n,o);Object.defineProperty(t,o,r)}})),t}const n={init(){this.plugins=[],this.settings={},this.mixins=[]},set(e,t){if(1===arguments.length)return this.settings[e];this.settings[e]=t},use(e,...t){return"function"==typeof e?this.plugins.push({handler:e,args:t}):"object"==typeof e&&this.mixins.push({handler:e,args:[]}),this},handle(e){this.plugins.forEach((t=>{if(t&&"function"==typeof t.handler){const n=t.handler.call(this,e,...t.args);"object"==typeof n&&this.mixins.push({handler:n,args:[]})}})),this.mixins.forEach((({handler:{onInit:t,onPause:n,build:o,onResume:r,onDestroy:i,onCreate:s,...g},args:h})=>{Object.assign(e,g)}))}};Buffer;let o=null;function r(){return h()&&s()}function i(){return h()&&g()}function s(){return"undefined"!=typeof hmApp}function g(){return"undefined"!=typeof __$$R$$__}function h(){return s()||g()}o="undefined"!=typeof __$$R$$__?__$$R$$__:()=>{},r()?hmApp.getPackageInfo:i()&&o("@zos/app").getPackageInfo,r()?hmUI:i()&&o("@zos/ui"),r()?hmSetting.getDeviceInfo:i()&&o("@zos/device").getDeviceInfo,r()?"undefined"!=typeof __$$app$$__&&__$$app$$__:i()&&o("@zos/i18n").getText,r()?hmApp.gotoPage:i()&&o("@zos/router").push,r()?hmBle:i()&&o("@zos/ble");let a=null;function l({globalData:e={},onCreate:t,onDestroy:n,...o}={}){const r={globalData:e,...o,onCreate(...e){for(let t=0;t<=l.mixins.length-1;t++){const n=l.mixins[t];n.handler.onCreate?.apply(this,e)}t?.apply(this,e)},onDestroy(...e){n?.apply(this,e);for(let t=l.mixins.length-1;t>=0;t--){const n=l.mixins[t];n.handler.onDestroy?.apply(this,e)}}};return l.handle(r),r}r()?a=DeviceRuntimeCore.HmLogger:i()?a=o("@zos/utils").log:"undefined"!=typeof messaging&&"undefined"!=typeof Logger&&(a=Logger),t(l,n),l.init(),l.use((function(){return{onInit(){this.logger=a.getLogger(this.name||"Page"),this.log=(...e)=>{this.logger.log(...e)},this.error=(...e)=>{e[0]instanceof Error?this.logger.error(...e):this.logger.error({},...e)},this.debug=(...e)=>{this.logger.debug(...e)}},onCreate(){this.logger=a.getLogger(this.name||"app.js"),this.log=(...e)=>{this.logger.log(...e)},this.error=(...e)=>{e[0]instanceof Error?this.logger.error(...e):this.logger.error({},...e)},this.debug=(...e)=>{this.logger.debug(...e)}}}}));export{l as BaseApp,t as merge};
